<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.7.0</version>
    </parent>

    <groupId>de.gematik.idp</groupId>
    <artifactId>idp-global</artifactId>
    <version>20.0.9</version>
    <packaging>pom</packaging>

    <description>IDP</description>

    <modules>
        <module>idp-crypto</module>
        <module>idp-test</module>
        <module>idp-commons</module>
        <module>idp-client</module>
        <module>idp-server</module>
        <module>idp-sektoral</module>
        <module>idp-fedmaster</module>
        <module>idp-fachdienst</module>
        <module>idp-testsuite</module>
        <module>idp-report</module>
    </modules>

    <organization>
        <name>gematik GmbH</name>
        <url>http://www.gematik.de</url>
    </organization>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${version.bouncycastle.bcpkix}</version>
            </dependency>
            <dependency>
                <groupId>de.gematik.pki</groupId>
                <artifactId>gemLibPki</artifactId>
                <version>${version.gemLibPki}</version>
            </dependency>
            <dependency>
                <groupId>de.gematik.idp.aforeporter</groupId>
                <artifactId>aforeporter</artifactId>
                <version>${version.aforeporter}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${version.logback}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${version.logback}</version>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${version.json}</version>
            </dependency>
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${version.liquibase}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
            </dependency>
            <dependency>
                <groupId>com.konghq</groupId>
                <artifactId>unirest-java</artifactId>
                <version>${version.unirest}</version>
            </dependency>
            <dependency>
                <groupId>com.konghq</groupId>
                <artifactId>unirest-objectmapper-jackson</artifactId>
                <version>${version.unirest}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <properties>

        <docker.registry.gematik>eu.gcr.io/gematik-all-infra-prod</docker.registry.gematik>
        <docker.image.name.smartcard>${docker.registry.gematik}/idp/idp-server</docker.image.name.smartcard>
        <docker.image.name.sektoralidp>${docker.registry.gematik}/idp/idp-sektoral</docker.image.name.sektoralidp>
        <docker.image.name.fedmaster>${docker.registry.gematik}/idp/idp-fedmaster</docker.image.name.fedmaster>
        <docker.image.name.fachdienst>${docker.registry.gematik}/idp/idp-fachdienst</docker.image.name.fachdienst>
        <java.version>11</java.version>
        <mpir.skip>true</mpir.skip>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../idp-report/target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.language>java</sonar.language>

        <version.aforeporter>1.2.1</version.aforeporter>
        <version.assertj>3.23.1</version.assertj>
        <version.bouncycastle.bcpkix>1.70</version.bouncycastle.bcpkix>
        <version.commons-io>2.11.0</version.commons-io>
        <version.gemLibPki>0.7.1</version.gemLibPki>
        <version.h2>2.1.212</version.h2>
        <version.json>20220320</version.json>
        <version.jsoniter>0.9.23</version.jsoniter>
        <!--higher versions do not work -->
        <version.liquibase>4.7.1</version.liquibase>
        <version.logback>1.2.9</version.logback>
        <version.lombok>1.18.16</version.lombok>
        <version.rest-assured>5.0.1</version.rest-assured>
        <version.serenity.core>3.2.4</version.serenity.core>
        <version.tiger>0.23.2</version.tiger>
        <version.unirest>3.13.10</version.unirest>

        <version.build-helper-maven-plugin>3.2.0</version.build-helper-maven-plugin>
        <version.docker-maven-plugin>0.34.1</version.docker-maven-plugin>
        <version.copy-rename-maven-plugin>1.0.1</version.copy-rename-maven-plugin>
        <version.jacoco-maven-plugin>0.8.5</version.jacoco-maven-plugin>
        <version.maven-clean-plugin>3.1.0</version.maven-clean-plugin>
        <version.maven-compiler-plugin>3.8.1</version.maven-compiler-plugin>
        <version.maven-failsafe-plugin>3.0.0-M5</version.maven-failsafe-plugin>
        <version.maven-jar-plugin>3.2.0</version.maven-jar-plugin>
        <version.maven-javadoc-plugin>3.0.1</version.maven-javadoc-plugin>
        <version.maven-project-info-reports-plugin>3.1.1</version.maven-project-info-reports-plugin>
        <!-- only needed for mvn site to avoid stack traces flooding the console -->
        <version.maven-resources-plugin>3.2.0</version.maven-resources-plugin>
        <version.maven-site-plugin>3.9.1</version.maven-site-plugin>
        <!-- settings for upload to sonar server -->
        <version.maven-source-plugin>3.0.1</version.maven-source-plugin>
        <version.maven-surefire-plugin>3.0.0-M3</version.maven-surefire-plugin>
        <version.sonar-maven-plugin>3.7.0.1746</version.sonar-maven-plugin>
        <version.spring-boot-maven-plugin>2.3.4.RELEASE</version.spring-boot-maven-plugin>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.maven-resources-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.maven-compiler-plugin}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <debug>true</debug>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Phase clean -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${version.maven-clean-plugin}</version>
                <configuration>
                    <filesets>
                        <!-- delete logfiles -->
                        <fileset>
                            <directory>logs</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- remove only needed for mvn site runs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${version.maven-site-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${version.maven-project-info-reports-plugin}</version>
            </plugin>
            <!-- to remove docker images call mvn docker:remove -Ddocker.removeNamePattern=idp-* -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <configuration>
                    <argLine>${surefireArgLine} -Dfile.encoding=UTF-8</argLine>
                    <skipTests>${skip.unittests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.jacoco-maven-plugin}</version>
                <executions>
                    <execution>
                        <configuration>
                            <append>true</append>
                            <destFile>${project.basedir}/target/jacoco.exec</destFile>
                            <excludes>
                                <exclude>de.gematik.idp.tests.*</exclude>
                            </excludes>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <id>default-prepare-agent</id>
                    </execution>
                </executions>
            </plugin>

            <!-- to upload jacoco results to sonar server via mvn sonar:sonar-->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${version.sonar-maven-plugin}</version>
            </plugin>
        </plugins>
    </build>

</project>
